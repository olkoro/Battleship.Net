@page
@using Domain
@model WebApp.Pages.Game

@{
    ViewData["Title"] = "Game Setup";
}

<!DOCTYPE html>

<html>
<head>
    <title>Game in Progress</title>
    <link href="style.css">
</head>
<body>
@if (WebUI.GetWinner() == null)
{
    <div class="text-center">
        @if (Model.Player != WebUI.Current)
        {
            <a href="?cmd=go">üîÑ @Html.DisplayFor(s => s.Player.Name)</a>
        }
        else
        {
            <a>üë§ @Html.DisplayFor(s => s.Player.Name)</a>
        }@if (SaveSystem.GameStates.Count > 0)
         {
             <a href="?Where=save" style="float: bottom">üíæ</a>
         }
    </div>
    <div style="padding-left: 15%; padding-right: 15%; font-size: 180%">
        
        <div style="position: relative; width: 50%;">
            @if (Model.Player != WebUI.Current)//blurred
            {
                <table class="border" style="float: left; filter: blur(24px);">
                    @for (int i = 0; i < WebUI.Player1.Map.Board.Count; i++)
                    {
                        <tr class="border">
                            @for (var j = 0; j < WebUI.Player1.Map.Board[i].Count; j++)
                            {
                                <td class="border">
                                    @WebUI.ConvertToSymbols(WebUI.Current.Map.Board[i][j].ToString())
                                </td>
                            }
                        </tr>
                    }
                </table>
                <div class="text-center" style="position: absolute; top: 120px; left: 35%">Hidden ü§ê</div>
            }
            else
            {
                <table class="border" style="float: left;">
                    <tbody>
                    @for (int i = 0; i < Model.GameBoard.Board.Count; i++)
                    {
                        <tr class="border">
                            @for (var j = 0; j < Model.GameBoard.Board[i].Count; j++)
                            {
                                <td class="border">
                                    @WebUI.ConvertToSymbols(Model.GameBoard.Board[i][j].ToString())
                                </td>
                            }
                        </tr>
                    }
                    </tbody>
                </table>
            }
        </div>
        <div style="float: right;width: 50%">
            <table class="border" style="display: inline-block;">
                <tbody>
                @for (int i = 0; i < Model.Map.Board.Count; i++)
                {
                    <tr class="border">
                        @for (var j = 0; j < Model.Map.Board[i].Count; j++)
                        {
                            <td class="border">
                                @if (Model.Player != WebUI.Current)
                                {
                                    @WebUI.ConvertToSymbols(Model.Map.Board[i][j].ToString())
                                }
                                else
                                {
                                    <a href="?Where=@i,@j">@WebUI.ConvertToSymbols(Model.Map.Board[i][j].ToString())</a>
                                }
                            </td>
                        }
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
}
else
{
    <div class="text-center">
        @WebUI.GetWinner().Name Won!
        @if (WebUI.GetWinner().AI)
        {
            <a>ü§£ü§£ü§£</a>
        }
        else
        {
            <a>üòé</a>
        }<br>
        <a href="Index">Exit</a>
    </div>
}

</body>
</html>